{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\doughboys-pizza\\\\src\\\\components\\\\custom-pizza.js\";\nimport React, { useState } from 'react';\nimport { store } from 'react-notifications-component';\nimport { isMobile } from 'react-device-detect';\n\nfunction CustomPizza(props) {\n  const [checkedItems, setCheckedItems] = useState(props.pizza.toppings);\n  const [selectedRadioButton, setSelectedRadioButton] = useState(props.pizza.sauceOptions[0]);\n  const [additionalComments, setAdditionalComments] = useState(\"\");\n\n  function mapToppingsToSquareModifiers() {\n    return Object.keys(checkedItems).filter(k => {\n      if (props.pizza.type === \"Cheese\") {\n        if (checkedItems[k]) {\n          return k === \"No Cheese\" ? k : \"Add \" + k;\n        }\n      } else {\n        if (!checkedItems[k] && k !== \"No Cheese\") {\n          return \"No \" + k;\n        } else if (checkedItems[k] && k === \"No Cheese\") {\n          return k;\n        }\n      }\n    });\n  }\n\n  const handleClick = () => {\n    let orders = props.order.order.pizzasOrdered;\n    let pizzaTotal;\n\n    if (props.pizza.type === \"Cheese\") {\n      pizzaTotal = (Object.keys(checkedItems).filter(k => checkedItems[k] && k !== \"No Cheese\").length * .50 + 7).toFixed(2);\n    } else {\n      pizzaTotal = props.pizza.price.toFixed(2);\n    }\n\n    orders.push({\n      type: props.pizza.type,\n      sauce: selectedRadioButton,\n      toppings: mapToppingsToSquareModifiers(),\n      comments: additionalComments,\n      price: pizzaTotal\n    });\n    let orderSubTotal = (parseFloat(props.order.order.orderSubTotal) + parseFloat(pizzaTotal)).toFixed(2);\n    let orderTax = parseFloat(orderSubTotal * .08363).toFixed(2);\n    let orderTotal = (parseFloat(orderSubTotal) + parseFloat(orderTax)).toFixed(2);\n    props.order.setOrder({\n      pizzasOrdered: [...orders],\n      orderSubTotal: orderSubTotal,\n      orderTax: orderTax,\n      orderTotal: orderTotal\n    });\n\n    if (isMobile) {\n      store.addNotification({\n        title: \"Item Added\",\n        message: props.pizza.type + \" Pizza Added To Cart.\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-center\",\n        dismiss: {\n          duration: 1500\n        }\n      });\n    }\n\n    setCheckedItems(props.pizza.toppings);\n    setSelectedRadioButton(\"Pizza Sauce\");\n    setAdditionalComments(\"\");\n  };\n\n  const handleCheckBoxChange = event => {\n    setCheckedItems({ ...checkedItems,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"pizza-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, props.pizza.type, \" - \", props.pizza.price), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Sauce\"), props.pizza.sauceOptions.length > 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    class: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, props.pizza.sauceOptions.map(sauce => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    class: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    value: sauce,\n    checked: selectedRadioButton === sauce,\n    onChange: event => setSelectedRadioButton(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }), sauce)))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, props.pizza.sauceOptions[0]), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Toppings \", props.pizza.type === \"Cheese\" ? \"- 0.50\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field is-grouped is-grouped-multiline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, Object.keys(props.pizza.toppings).map(topping => /*#__PURE__*/React.createElement(\"div\", {\n    class: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    class: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: topping,\n    checked: checkedItems[topping],\n    onChange: handleCheckBoxChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }), topping)))), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Additional Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"contorl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    class: \"textarea has-fixed-size\",\n    value: additionalComments,\n    onChange: event => setAdditionalComments(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"button is-primary is-small\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Add To Order\"));\n}\n\nexport default CustomPizza;","map":{"version":3,"sources":["E:/Projects/doughboys-pizza/src/components/custom-pizza.js"],"names":["React","useState","store","isMobile","CustomPizza","props","checkedItems","setCheckedItems","pizza","toppings","selectedRadioButton","setSelectedRadioButton","sauceOptions","additionalComments","setAdditionalComments","mapToppingsToSquareModifiers","Object","keys","filter","k","type","handleClick","orders","order","pizzasOrdered","pizzaTotal","length","toFixed","price","push","sauce","comments","orderSubTotal","parseFloat","orderTax","orderTotal","setOrder","addNotification","title","message","insert","container","dismiss","duration","handleCheckBoxChange","event","target","name","checked","map","value","topping"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { store } from 'react-notifications-component';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nfunction CustomPizza(props) {\r\n    const [checkedItems, setCheckedItems] = useState(props.pizza.toppings);\r\n    const [selectedRadioButton, setSelectedRadioButton] = useState(props.pizza.sauceOptions[0]);\r\n    const [additionalComments, setAdditionalComments] = useState(\"\");\r\n\r\n    function mapToppingsToSquareModifiers() {\r\n        return Object.keys(checkedItems).filter(k => {\r\n            if(props.pizza.type === \"Cheese\") {\r\n                if(checkedItems[k]) {\r\n                    return k === \"No Cheese\" ? k :\"Add \" + k;\r\n                } \r\n            } else {\r\n                if(!checkedItems[k] && k !== \"No Cheese\") {\r\n                    return \"No \" + k;\r\n                } else if(checkedItems[k] && k === \"No Cheese\") {\r\n                    return k\r\n                }\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    const handleClick = () => {\r\n        let orders = props.order.order.pizzasOrdered;\r\n        let pizzaTotal;\r\n        if (props.pizza.type === \"Cheese\") {\r\n            pizzaTotal = ((Object.keys(checkedItems).filter(k => checkedItems[k] && k !== \"No Cheese\").length * .50) + 7).toFixed(2);\r\n        } else {\r\n            pizzaTotal = props.pizza.price.toFixed(2);\r\n        }\r\n        orders.push({ type: props.pizza.type, sauce: selectedRadioButton, toppings: mapToppingsToSquareModifiers(), comments: additionalComments, price: pizzaTotal })\r\n        let orderSubTotal = (parseFloat(props.order.order.orderSubTotal) + parseFloat(pizzaTotal)).toFixed(2);\r\n        let orderTax = (parseFloat(orderSubTotal * .08363)).toFixed(2);\r\n        let orderTotal = (parseFloat(orderSubTotal) + parseFloat(orderTax)).toFixed(2);\r\n        props.order.setOrder({ pizzasOrdered: [...orders], orderSubTotal: orderSubTotal, orderTax: orderTax, orderTotal: orderTotal})\r\n        if (isMobile) {\r\n            store.addNotification({\r\n                title: \"Item Added\",\r\n                message: props.pizza.type + \" Pizza Added To Cart.\",\r\n                type: \"success\",\r\n                insert: \"top\",\r\n                container: \"top-center\",\r\n                dismiss: {\r\n                    duration: 1500,\r\n                }\r\n            })\r\n        }\r\n        setCheckedItems(props.pizza.toppings);\r\n        setSelectedRadioButton(\"Pizza Sauce\");\r\n        setAdditionalComments(\"\");\r\n    }\r\n\r\n    const handleCheckBoxChange = (event) => {\r\n        setCheckedItems({ ...checkedItems, [event.target.name]: event.target.checked });\r\n    }\r\n\r\n    return (\r\n        <div className=\"field\">\r\n            <h1 className=\"pizza-title\">\r\n                {props.pizza.type} - {props.pizza.price}\r\n            </h1>\r\n            <label class=\"label\">Sauce</label>\r\n            {props.pizza.sauceOptions.length > 1 ?\r\n                <div class=\"control\">\r\n                    {props.pizza.sauceOptions.map((sauce) =>\r\n                        <>\r\n                            <label class=\"radio\">\r\n                                <input type=\"radio\" value={sauce} checked={selectedRadioButton === sauce} onChange={(event) => setSelectedRadioButton(event.target.value)} />\r\n                                {sauce}\r\n                            </label>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                : <div>{props.pizza.sauceOptions[0]}</div>}\r\n            <label class=\"label\">Toppings {props.pizza.type === \"Cheese\" ? \"- 0.50\" : \"\"}</label>\r\n            <div class=\"field is-grouped is-grouped-multiline\">\r\n                {Object.keys(props.pizza.toppings).map((topping) =>\r\n                    <div class=\"control\">\r\n                        <label class=\"checkbox\">\r\n                            <input type=\"checkbox\" name={topping} checked={checkedItems[topping]} onChange={handleCheckBoxChange} />\r\n                            {topping}\r\n                        </label>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <label class=\"label\">Additional Comments</label>\r\n            <div class=\"field\">\r\n                <div class=\"contorl\">\r\n                    <textarea class=\"textarea has-fixed-size\" value={additionalComments} onChange={(event) => setAdditionalComments(event.target.value)}></textarea>\r\n                </div>\r\n            </div>\r\n            <button class=\"button is-primary is-small\" onClick={handleClick}>Add To Order</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomPizza"]},"metadata":{},"sourceType":"module"}