{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\doughboys-pizza\\\\src\\\\components\\\\custom-pizza.js\";\nimport React, { useState } from 'react';\nimport { store } from 'react-notifications-component';\nimport { isMobile } from 'react-device-detect';\n\nfunction CustomPizza(props) {\n  const [checkedItems, setCheckedItems] = useState(props.pizza.toppings);\n  const [selectedRadioButton, setSelectedRadioButton] = useState(props.pizza.sauceOptions[0]);\n  const [additionalComments, setAdditionalComments] = useState(\"\");\n\n  const handleClick = () => {\n    let orders = props.order.order.pizzasOrdered;\n    let total;\n\n    if (props.pizza.type === \"Cheese\") {\n      total = (Object.keys(checkedItems).filter(k => checkedItems[k]).length * .50 + 5).toFixed(2);\n    } else {\n      total = props.pizza.price.toFixed(2);\n    }\n\n    orders.push({\n      type: props.pizza.type,\n      sauce: selectedRadioButton,\n      toppings: Object.keys(checkedItems).filter(k => checkedItems[k]),\n      comments: additionalComments,\n      price: total\n    });\n    props.order.setOrder({\n      pizzasOrdered: [...orders],\n      orderTotal: (parseFloat(props.order.order.orderTotal) + parseFloat(total)).toFixed(2)\n    });\n\n    if (isMobile) {\n      store.addNotification({\n        title: \"Item Added\",\n        message: props.pizza.type + \"pizza added.\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-center\",\n        dismiss: {\n          duration: 1500\n        }\n      });\n    }\n\n    setCheckedItems(props.pizza.toppings);\n    setSelectedRadioButton(\"Pizza Sauce\");\n    setAdditionalComments(\"\");\n  };\n\n  const handleCheckBoxChange = event => {\n    setCheckedItems({ ...checkedItems,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"pizza-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, props.pizza.type, \" - \", props.pizza.price), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Sauce\"), props.pizza.sauceOptions.length > 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    class: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, props.pizza.sauceOptions.map(sauce => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    class: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    value: sauce,\n    checked: selectedRadioButton === sauce,\n    onChange: event => setSelectedRadioButton(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }), sauce)))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, props.pizza.sauceOptions[0]), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Toppings \", props.pizza.type === \"Cheese\" ? \"- 0.50\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field is-grouped is-grouped-multiline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, Object.keys(props.pizza.toppings).map(topping => /*#__PURE__*/React.createElement(\"div\", {\n    class: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    class: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: topping,\n    checked: checkedItems[topping],\n    onChange: handleCheckBoxChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }), topping)))), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Additional Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"contorl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    class: \"textarea has-fixed-size\",\n    value: additionalComments,\n    onChange: event => setAdditionalComments(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"button is-primary is-small\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Add To Order\"));\n}\n\nexport default CustomPizza;","map":{"version":3,"sources":["E:/Projects/doughboys-pizza/src/components/custom-pizza.js"],"names":["React","useState","store","isMobile","CustomPizza","props","checkedItems","setCheckedItems","pizza","toppings","selectedRadioButton","setSelectedRadioButton","sauceOptions","additionalComments","setAdditionalComments","handleClick","orders","order","pizzasOrdered","total","type","Object","keys","filter","k","length","toFixed","price","push","sauce","comments","setOrder","orderTotal","parseFloat","addNotification","title","message","insert","container","dismiss","duration","handleCheckBoxChange","event","target","name","checked","map","value","topping"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { store } from 'react-notifications-component';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nfunction CustomPizza(props) {\r\n    const [checkedItems, setCheckedItems] = useState(props.pizza.toppings);\r\n    const [selectedRadioButton, setSelectedRadioButton] = useState(props.pizza.sauceOptions[0]);\r\n    const [additionalComments, setAdditionalComments] = useState(\"\");\r\n    const handleClick = () => {\r\n        let orders = props.order.order.pizzasOrdered;\r\n        let total;\r\n        if (props.pizza.type === \"Cheese\") {\r\n            total = ((Object.keys(checkedItems).filter(k => checkedItems[k]).length * .50) + 5).toFixed(2);\r\n        } else {\r\n            total = props.pizza.price.toFixed(2);\r\n        }\r\n        orders.push({ type: props.pizza.type, sauce: selectedRadioButton, toppings: Object.keys(checkedItems).filter(k => checkedItems[k]), comments: additionalComments, price: total })\r\n        props.order.setOrder({ pizzasOrdered: [...orders], orderTotal: (parseFloat(props.order.order.orderTotal) + parseFloat(total)).toFixed(2) })\r\n        if (isMobile) {\r\n            store.addNotification({\r\n                title: \"Item Added\",\r\n                message: props.pizza.type + \"pizza added.\",\r\n                type: \"success\",\r\n                insert: \"top\",\r\n                container: \"top-center\",\r\n                dismiss: {\r\n                    duration: 1500,\r\n                }\r\n            })\r\n        }\r\n        setCheckedItems(props.pizza.toppings);\r\n        setSelectedRadioButton(\"Pizza Sauce\");\r\n        setAdditionalComments(\"\");\r\n    }\r\n    const handleCheckBoxChange = (event) => {\r\n        setCheckedItems({ ...checkedItems, [event.target.name]: event.target.checked });\r\n    }\r\n    return (\r\n        <div className=\"field\">\r\n            <h1 className=\"pizza-title\">\r\n                {props.pizza.type} - {props.pizza.price}\r\n            </h1>\r\n            <label class=\"label\">Sauce</label>\r\n            {props.pizza.sauceOptions.length > 1 ?\r\n                <div class=\"control\">\r\n                    {props.pizza.sauceOptions.map((sauce) =>\r\n                        <>\r\n                            <label class=\"radio\">\r\n                                <input type=\"radio\" value={sauce} checked={selectedRadioButton === sauce} onChange={(event) => setSelectedRadioButton(event.target.value)} />\r\n                                {sauce}\r\n                            </label>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                : <div>{props.pizza.sauceOptions[0]}</div>}\r\n            <label class=\"label\">Toppings {props.pizza.type === \"Cheese\" ? \"- 0.50\" : \"\"}</label>\r\n            <div class=\"field is-grouped is-grouped-multiline\">\r\n                {Object.keys(props.pizza.toppings).map((topping) =>\r\n                    <div class=\"control\">\r\n                        <label class=\"checkbox\">\r\n                            <input type=\"checkbox\" name={topping} checked={checkedItems[topping]} onChange={handleCheckBoxChange} />\r\n                            {topping}\r\n                        </label>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <label class=\"label\">Additional Comments</label>\r\n            <div class=\"field\">\r\n                <div class=\"contorl\">\r\n                    <textarea class=\"textarea has-fixed-size\" value={additionalComments} onChange={(event) => setAdditionalComments(event.target.value)}></textarea>\r\n                </div>\r\n            </div>\r\n            <button class=\"button is-primary is-small\" onClick={handleClick}>Add To Order</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomPizza"]},"metadata":{},"sourceType":"module"}